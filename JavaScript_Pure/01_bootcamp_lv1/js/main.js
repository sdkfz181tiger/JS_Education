"use strict";

//==========
// JavaScript文法
// Level_01

//==========
// [コンソールを使ってみる]

console.log("Hello JavaScript!!");
console.log("Good morning!!");
console.log("Good afternoon!!");
console.log("Good evening!!");
// //を使うと、その行は実行されません
//console.log("Good night!!");

//==========
// [変数を使ってみよう]
//  1, letを使って変数を宣言します
//  2, 変数にデータを格納することができます
//  3, 変数の値を変更することができます

// 変数の宣言と初期化
let hoge = 100;
// 変数に格納されている値を確認
console.log(hoge);
// 変数の値を変更
hoge = 200;
// 変数に格納されている値を確認
console.log(hoge);
// 変数の値を変更
hoge = 300;
// 変数に格納されている値を確認
console.log(hoge);

// ** 追記 **
// 変数の命名規則について
//  1, 使用できる文字はUnicode文字、_(アンダースコア), $(ドル)
//  2, 1文字目には"数字"を使う事ができません
//  3, 大文字と小文字は区別されます
//  4, 予約後(プログラム上特別な意味がある言葉)は使えません

//==========
// [変数を使ってみよう]
//  1, 同じ変数名で、新しく変数を宣言することはできません
//  2, ""を使って文字列を格納することができます
//  3, 変数の値は変更することができます

// 変数の宣言と初期化
let fuga = "リンゴ";
// 変数に格納されている値を確認
console.log(fuga);
// 同じ変数名で、新しく変数を宣言することはできません
//let fuga = "ゴリラ";// これはエラーになります
// 変数の値を変更することはできます
fuga = "ゴリラ";
// 変数に格納されている値を確認
console.log(fuga);
// 変数の値を変更することはできます
fuga = "ラマヌジャン";
// 変数に格納されている値を確認
console.log(fuga);

//==========
// [計算をしてみよう]
//  1, 変数と変数を使って計算をする事ができます
//  2, +(足し算), -(引き算), *(掛け算), /(割り算), %(余り)
//  3, 数値+文字列の場合は、連結されて文字列になります

// 変数の宣言と初期化
let ramen = 800;
let gyoza = 300;
console.log(ramen + gyoza);

// 新しく変数を宣言し、計算結果を格納する
let total = ramen + gyoza;
console.log(total);

// 数値+文字列の場合は、連結されて文字列になります
console.log(total + "円です、まいどあり!!");

//==========
// [判定をしてみよう]
//  1, if を使って処理を振り分ける事ができます
//  2, == は、右の値と左の値が同じかどうかを判定します
//  3, < は、左の値がより小さいかどうかを判定します
//  4, > は、左の値がより大きいかどうかを判定します

// 変数を宣言して初期化する(フォロワー数)
let follower = 50;
// followerに格納されている値が、50と同じだったら...
if(follower == 50){
	console.log("50フォロワーぴったり達成!!");
}

// 変数を宣言して初期化する(身長)
let height = 190;
// heightに格納されている値が180より大きかったら...
if(height > 180){
	console.log("君、バスケ部に入らないか!?");
}

// 変数を宣言して初期化する(体重)
let weight = 55;
// weightに格納されている値が80より小さかったら...
if(weight < 80){
	console.log("もっと太ってから相撲部にきたまえ!!");
}

//==========
// [繰り返し文を使ってみよう while]
//  1, while の条件が満たされる間、繰り返し処理を実行します
//  2, 無限ループにならない様、判定条件に注意しましょう
//  3, += は、変数の値にプラスします
//  4, -= は、変数の値にマイナスをします

// 変数を初期化する
let money = 0;
// moneyの値が10000より小さいなら処理を繰り返す
while(money < 10000){
	console.log(money);
	money += 1000;// 1000を、moneyにプラスする
}
console.log(money + "円まで貯金が増えて草!!");

// moneyの値が0より大きいなら処理を繰り返す
while(money > 0){
	console.log(money);
	money -= 1000;// 1000を、moneyにマイナスする
}
console.log(money + "円になるまで使ってぴえん!!");

//==========
// [繰り返し文を使ってみよう for]
//  1, 特定の回数だけ、繰り返し処理をする事ができます
//  2, "初期化", "繰り返し条件", "後処理"にそれぞれ記述します
//  3, ++ は、変数の値を1だけプラスします

// 2回繰り返す処理 -> 0, 1と出力される
for(let i=0; i<2; i++){
	console.log(i);
}

// 3回繰り返す処理 -> 0, 1, 2と出力される
for(let i=0; i<3; i++){
	console.log(i);
}

// 4回繰り返す処理 -> 0, 1, 2, 3と出力される
for(let i=0; i<4; i++){
	console.log(i);
}

// 5回繰り返す処理 -> 0, 1, 2, 3, 4と出力される
for(let i=0; i<5; i++){
	console.log(i);
}



